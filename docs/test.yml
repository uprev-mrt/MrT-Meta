---
name: sample
author: Jason Berger
created: 02/20/2020
desc: GATT profile template
prefix: tp


services: #list multiple services in file to create full profile

  #########################################
  #        Device Service                 #
  #########################################
  - Device:
      uri: org.bluetooth.service.device_information #User URI of bluetooth sig standard service
      prefix: ds
      icon: fa-server #this isfor the live ICD (and completely optional). just adds an icon from here: https://fontawesome.com/icons?d=gallery&m=free
      chars:
        - {uri: org.bluetooth.characteristic.manufacturer_name_string , default: Up-Rev}  #list out uris of 'optional' desired chars
        - {uri: org.bluetooth.characteristic.serial_number_string}
        - {uri: org.bluetooth.characteristic.hardware_revision_string}
        - {uri: org.bluetooth.characteristic.firmware_revision_string, desc: Firmware revision} #You can override defaults from Bluetooth SIG (name,desc, perm, etc..)
  
  #########################################
  #        Battery Service                #
  #########################################
  - Battery: {uri: org.bluetooth.service.battery_service, prefix: bat} #no need to list chars, because the only one is Mandatory

  #########################################
  #        Sensor Service                 #
  #########################################
  - Sensor: 
      prefix: ss
      desc: Custom service for a Temperature/humidty sensor
      uuid: 71a8-1b49-ce39-0088-6b62-c8ed-9e20-9a5b 
      icon: fa-tachometer-alt
      chars: 
          # `unit` and `coef` are only used for displaying the values in the live ICD. They have no effect on the generated code 
        - Temperature: { type: uint16, perm: RWN, coef: 0.01, unit:  Â°f , desc: Temperature value in 1/100 of a degree farenheit} # uuid: 0x9e21 if uuid is blank/auto for first char in service. it will increment from service 16bit
        - Humidity: { type: uint16, perm: RWN , coef: 0.01, unit:  "%", desc: Humidity value in 1/100 of a percent} # uuid: 0x9e21 if uuid is blank/auto for first char in service. it will increment from service 16bit
        - Name: { type: string, perm: RW , desc: String value for sensor name} 
        - Options: 
            type: flags #flags create a bitmask for each item in 'vals'. All flags will have symbols in the code. The underlying data type is uint8_t, but will expand up to a uint32_t as needed
            perm: RW
            desc: Options for sensor
            vals:
              - AutoTemp: Auto update Temperature reading every 1 s
              - AutoHum: Auto update Temperature reading every 1 s
              - Temperature: Temperature sensor 
              - Barometer: Barometric Pressure sensor 

  
  #########################################
  #        Firmware OTA Service           #
  #########################################
  - FOTA:
      desc: sercive for performing over the air updates
      uuid: 71a8-1b49-ce39-0088-6b62-c8ed-9A10-9a5b
      prefix: ota
      chars:
        - version:    { type: string,   perm: RW, desc: current Firmware version}  # uuid: 0x9A11
        - newVerion:  {type: string,   perm: RW, desc: version of new firmware being loaded}    
        - data:       {type: uint8*64,  perm: RW, desc: current block of data} #array of 64 bytes
        - seq:        {type: uint32,    perm: RW, desc: sequence number of current block  }
        - crc:        {type: uint32,    perm: RW, desc: crc of new firmware  }
        - status:
            type: enum  
            perm: RW 
            desc: status of OTA process
            vals: 
              - IDLE:  no ota operation taking place
              - DOWNLOAD:  Currently downloading new firmware
              - COMPLETE:  Firmware download complete. ready to update






