
image: uprev/mrt 

variables:
  GIT_SUBMODULE_STRATEGY: recursive #pull submodules

stages:          # List of stages for jobs, and their order of execution
  - gather
  - build
  - test
  - commit 

#
# Gathers all of the submodules and moves submodule head to head of master
# - This is because submodules might get updates in other projects, and we want those reflected in the nightly test 
#
gather-job:
  stage: gather
  tags: [mrt]
  script: 
    - git submodule foreach git pull origin master


#
# Build the GTest Unit test
#
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags: [mrt]   
  script:
    - mkdir Test/build
    - cd Test/build
    - cmake ..
    - make
  artifacts:
    paths: 
      - Test/build/*
    expire_in: 1 week

#
# Run unit test and publish results
#
unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  tags: [mrt]
  script:
    - ./Test/build/runTests --gtest_output="xml:Test/test-results.xml"
  artifacts:
    reports:
      junit: Test/test-results.xml

#
# If there are changes (i.e. updates in submodules or docs) push back to the repo
# - This will trigger the docs to rebuild at mrt.readthedocs.io
#

commit-job:
  tags: [mrt]
  stage: commit
  before_script:
    - git config --global user.email "devops@uprev.com"
    - git config --global user.name "gitlab CI"
  script:
    - | 
      CHANGES=$(git status --porcelain | wc -l)
      if [[ "${CHANGES}" -gt 0 ]]; then
        echo "Committing updated files to git"
        git add executions.txt
        git commit -m "Updated executions with new running date"
        git push "https://${GITLAB_USER_NAME}:${CI_ACCESS_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_REF_NAME}" -o skip-ci
      else
        echo "Nothing to commit"
      fi


#TODO

